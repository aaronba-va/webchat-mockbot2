# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - webchat-mockbot2

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '12.13.0'

      - run: npm ci
      - run: npm run build --if-preset
      - run: npm test --if-present
      - run: npm pack
      - run: tar xvf *.tgz
      - run: mv node_modules package

      - name: Run zip -1rq ../zipdeploy.zip .
        run: |
          cd package
          ls -la
          zip -1rq ../zipdeploy.zip .

      - name: Upload artifact (tarball)
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: '*.tgz'

      - name: Upload artifact (Zip Deploy)
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: zipdeploy.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ startsWith(github.ref, 'refs/heads/') }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: package

      - name: Deploy to Azure Web App
        id: deploy
        uses: azure/webapps-deploy@v1
        with:
          app-name: webchat-mockbot2
          slot-name: production
          # publish-profile: ${{ secrets.AzureAppService_PublishProfile_774a167ab81e4bafb6507401dfdc8b26 }}
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_MOCKBOT3 }}
          package: zipdeploy.zip

      # - name: Ping deployment
      #   # We need to sleep because Azure Web Apps need time to pick up changes
      #   run: |
      #     sleep 5
      #     curl -s ${{ steps.deploy.outputs.webapp-url }}/health.txt
      #     curl -s ${{ steps.deploy.outputs.webapp-url }}/ready.txt

      - name: Ping healthy
        timeout-minutes: 1
        run: |
          bash -c 'while [[ "curl -s -o /dev/null -w ''%{http_code}'' ${{ steps.deploy.outputs.webapp-url }}/health.txt" != "200" ]]; do sleep 5; done' || false

      - name: Ping ready
        timeout-minutes: 1
        run: |
          bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' ${{ steps.deploy.outputs.webapp-url }}/ready.txt)" != "200" ]]; do sleep 5; done' || false
